[
  {
    "objectID": "Homework3.html",
    "href": "Homework3.html",
    "title": "Homework3 - Practice with Control Flow and Functions",
    "section": "",
    "text": "In this homework I will practice about Control Flow and how to write Function. Functions enhances efficiency in R programming. But First lets practice Control Flow,"
  },
  {
    "objectID": "Homework3.html#task-1-control-flow",
    "href": "Homework3.html#task-1-control-flow",
    "title": "Homework3 - Practice with Control Flow and Functions",
    "section": "Task 1: Control Flow",
    "text": "Task 1: Control Flow\nWe can take out old data from Homework 2 and load it here. Make sure that the file “hw2_list.rda” is in the working directory. Now load the file in the R environment\n\nload(\"hw2_list.rda\")\nhead(bp_list)\n\n$treatment\n              patient pre_bp post_bp diff_bp normal\nSubject_1   Subject_1    120     127      -7  FALSE\nSubject_2   Subject_2    151     145       6  FALSE\nSubject_3   Subject_3    125     135     -10  FALSE\nSubject_4   Subject_4    126     122       4  FALSE\nSubject_5   Subject_5    115     115       0   TRUE\nSubject_6   Subject_6    132     122      10  FALSE\nSubject_7   Subject_7    132     123       9  FALSE\nSubject_8   Subject_8    129     126       3  FALSE\nSubject_9   Subject_9    134     126       8  FALSE\nSubject_10 Subject_10    139     129      10  FALSE\nSubject_11 Subject_11    127     132      -5  FALSE\nSubject_12 Subject_12    122     146     -24  FALSE\nSubject_13 Subject_13    127     120       7  FALSE\nSubject_14 Subject_14    135     114      21   TRUE\nSubject_15 Subject_15    133     121      12  FALSE\nSubject_16 Subject_16    128     120       8  FALSE\nSubject_17 Subject_17    147     128      19  FALSE\nSubject_18 Subject_18    138     120      18  FALSE\nSubject_19 Subject_19    140     133       7  FALSE\nSubject_20 Subject_20    132     115      17   TRUE\n\n$placebo\n      patient pre_bp post_bp diff_bp normal\n1   Subject_1    138     105      33   TRUE\n2   Subject_2    135     136      -1  FALSE\n3   Subject_3    147     123      24  FALSE\n4   Subject_4    117     130     -13  FALSE\n5   Subject_5    152     134      18  FALSE\n6   Subject_6    134     143      -9  FALSE\n7   Subject_7    114     135     -21  FALSE\n8   Subject_8    121     139     -18  FALSE\n9   Subject_9    131     120      11  FALSE\n10 Subject_10    130     124       6  FALSE\n\nstr(bp_list)\n\nList of 2\n $ treatment:'data.frame':  20 obs. of  5 variables:\n  ..$ patient: chr [1:20] \"Subject_1\" \"Subject_2\" \"Subject_3\" \"Subject_4\" ...\n  ..$ pre_bp : num [1:20] 120 151 125 126 115 132 132 129 134 139 ...\n  ..$ post_bp: num [1:20] 127 145 135 122 115 122 123 126 126 129 ...\n  ..$ diff_bp: num [1:20] -7 6 -10 4 0 10 9 3 8 10 ...\n  ..$ normal : logi [1:20] FALSE FALSE FALSE FALSE TRUE FALSE ...\n $ placebo  :'data.frame':  10 obs. of  5 variables:\n  ..$ patient: chr [1:10] \"Subject_1\" \"Subject_2\" \"Subject_3\" \"Subject_4\" ...\n  ..$ pre_bp : num [1:10] 138 135 147 117 152 134 114 121 131 130\n  ..$ post_bp: num [1:10] 105 136 123 130 134 143 135 139 120 124\n  ..$ diff_bp: num [1:10] 33 -1 24 -13 18 -9 -21 -18 11 6\n  ..$ normal : logi [1:10] TRUE FALSE FALSE FALSE FALSE FALSE ...\n\ndf_bp = bp_list #creating a data frame so that it will not modify original data frame\n\nThe “bp_list” file is in the environment and “df_bp” is created.\n\nSuppose we want to characterize the post-treatment (or placebo) blood pressure measurement as optimal (≤ 120), borderline (120 &lt; bp ≤ 130), and high (&gt; 130). First, create a new column in each data frame from above called status. You can do this via\n\n\ndf_bp$treatment$status &lt;- character(20) #as we have 20 obs in treatment (see str ouptut above) I used 20 here\ndf_bp$placebo$status &lt;- character(10)\nhead(df_bp)\n\n$treatment\n              patient pre_bp post_bp diff_bp normal status\nSubject_1   Subject_1    120     127      -7  FALSE       \nSubject_2   Subject_2    151     145       6  FALSE       \nSubject_3   Subject_3    125     135     -10  FALSE       \nSubject_4   Subject_4    126     122       4  FALSE       \nSubject_5   Subject_5    115     115       0   TRUE       \nSubject_6   Subject_6    132     122      10  FALSE       \nSubject_7   Subject_7    132     123       9  FALSE       \nSubject_8   Subject_8    129     126       3  FALSE       \nSubject_9   Subject_9    134     126       8  FALSE       \nSubject_10 Subject_10    139     129      10  FALSE       \nSubject_11 Subject_11    127     132      -5  FALSE       \nSubject_12 Subject_12    122     146     -24  FALSE       \nSubject_13 Subject_13    127     120       7  FALSE       \nSubject_14 Subject_14    135     114      21   TRUE       \nSubject_15 Subject_15    133     121      12  FALSE       \nSubject_16 Subject_16    128     120       8  FALSE       \nSubject_17 Subject_17    147     128      19  FALSE       \nSubject_18 Subject_18    138     120      18  FALSE       \nSubject_19 Subject_19    140     133       7  FALSE       \nSubject_20 Subject_20    132     115      17   TRUE       \n\n$placebo\n      patient pre_bp post_bp diff_bp normal status\n1   Subject_1    138     105      33   TRUE       \n2   Subject_2    135     136      -1  FALSE       \n3   Subject_3    147     123      24  FALSE       \n4   Subject_4    117     130     -13  FALSE       \n5   Subject_5    152     134      18  FALSE       \n6   Subject_6    134     143      -9  FALSE       \n7   Subject_7    114     135     -21  FALSE       \n8   Subject_8    121     139     -18  FALSE       \n9   Subject_9    131     120      11  FALSE       \n10 Subject_10    130     124       6  FALSE       \n\nstr(df_bp)\n\nList of 2\n $ treatment:'data.frame':  20 obs. of  6 variables:\n  ..$ patient: chr [1:20] \"Subject_1\" \"Subject_2\" \"Subject_3\" \"Subject_4\" ...\n  ..$ pre_bp : num [1:20] 120 151 125 126 115 132 132 129 134 139 ...\n  ..$ post_bp: num [1:20] 127 145 135 122 115 122 123 126 126 129 ...\n  ..$ diff_bp: num [1:20] -7 6 -10 4 0 10 9 3 8 10 ...\n  ..$ normal : logi [1:20] FALSE FALSE FALSE FALSE TRUE FALSE ...\n  ..$ status : chr [1:20] \"\" \"\" \"\" \"\" ...\n $ placebo  :'data.frame':  10 obs. of  6 variables:\n  ..$ patient: chr [1:10] \"Subject_1\" \"Subject_2\" \"Subject_3\" \"Subject_4\" ...\n  ..$ pre_bp : num [1:10] 138 135 147 117 152 134 114 121 131 130\n  ..$ post_bp: num [1:10] 105 136 123 130 134 143 135 139 120 124\n  ..$ diff_bp: num [1:10] 33 -1 24 -13 18 -9 -21 -18 11 6\n  ..$ normal : logi [1:10] TRUE FALSE FALSE FALSE FALSE FALSE ...\n  ..$ status : chr [1:10] \"\" \"\" \"\" \"\" ...\n\n\n\nFor the non-placebo data frame (within the list), create a for loop and use if/then/else logic to create the status column’s values.\n\n\nfor (i in 1:nrow(df_bp$treatment)){\nif (df_bp$treatment$post_bp[i] &lt;= 120) {\n  df_bp$treatment$status[i] &lt;- \"optimal\"\n} else if (df_bp$treatment$post_bp[i] &gt; 120 & df_bp$treatment$post_bp[i] &lt;= 130) {\n  df_bp$treatment$status[i] &lt;- \"borderline\"\n} else df_bp$treatment$status[i] &lt;- \"High\"\n}\ndf_bp$treatment\n\n              patient pre_bp post_bp diff_bp normal     status\nSubject_1   Subject_1    120     127      -7  FALSE borderline\nSubject_2   Subject_2    151     145       6  FALSE       High\nSubject_3   Subject_3    125     135     -10  FALSE       High\nSubject_4   Subject_4    126     122       4  FALSE borderline\nSubject_5   Subject_5    115     115       0   TRUE    optimal\nSubject_6   Subject_6    132     122      10  FALSE borderline\nSubject_7   Subject_7    132     123       9  FALSE borderline\nSubject_8   Subject_8    129     126       3  FALSE borderline\nSubject_9   Subject_9    134     126       8  FALSE borderline\nSubject_10 Subject_10    139     129      10  FALSE borderline\nSubject_11 Subject_11    127     132      -5  FALSE       High\nSubject_12 Subject_12    122     146     -24  FALSE       High\nSubject_13 Subject_13    127     120       7  FALSE    optimal\nSubject_14 Subject_14    135     114      21   TRUE    optimal\nSubject_15 Subject_15    133     121      12  FALSE borderline\nSubject_16 Subject_16    128     120       8  FALSE    optimal\nSubject_17 Subject_17    147     128      19  FALSE borderline\nSubject_18 Subject_18    138     120      18  FALSE    optimal\nSubject_19 Subject_19    140     133       7  FALSE       High\nSubject_20 Subject_20    132     115      17   TRUE    optimal\n\n\n\nLets repeat the same for placebo data frame (within the list)\n\n\nfor (i in 1:nrow(df_bp$placebo)){\nif (df_bp$placebo$post_bp[i] &lt;= 120) {\n  df_bp$placebo$status[i] &lt;- \"optimal\"\n} else if (df_bp$placebo$post_bp[i] &gt; 120 & df_bp$placebo$post_bp[i] &lt;= 130) {\n  df_bp$placebo$status[i] &lt;- \"borderline\"\n} else df_bp$placebo$status[i] &lt;- \"High\"\n}\ndf_bp$placebo\n\n      patient pre_bp post_bp diff_bp normal     status\n1   Subject_1    138     105      33   TRUE    optimal\n2   Subject_2    135     136      -1  FALSE       High\n3   Subject_3    147     123      24  FALSE borderline\n4   Subject_4    117     130     -13  FALSE borderline\n5   Subject_5    152     134      18  FALSE       High\n6   Subject_6    134     143      -9  FALSE       High\n7   Subject_7    114     135     -21  FALSE       High\n8   Subject_8    121     139     -18  FALSE       High\n9   Subject_9    131     120      11  FALSE    optimal\n10 Subject_10    130     124       6  FALSE borderline"
  },
  {
    "objectID": "Homework3.html#task-2-function-writing",
    "href": "Homework3.html#task-2-function-writing",
    "title": "Homework3 - Practice with Control Flow and Functions",
    "section": "Task 2: Function Writing",
    "text": "Task 2: Function Writing\nContinue the previous example. Suppose you would eventually have many data sets in the form of the two above. You want to write a function to do some things for you quickly.\n\nWrite a function that\n\n• takes in a list with two data frames in it (a treatment and a placebo data frame) as an argument. Give no default value.\n• takes in an R function (that would find a summary of a numeric column) with the default value being set to “mean” (notice this is a quoted string).\n• Finds the statistic of interest (as defined by the user input) for the pre, post, and diff columns of both data frames.\n– Use my_fun &lt;- get(stat) within the function to get the function from the quoted string. • These six values should then be returned as a named list with meaningful names - this is a somewhat challenging part!\n– I’m going to let you consider what to do but you might create a vector of names that is created dynamically based on the statistic passed, create a vector with the actual statistic values, and then assign names() to your vector. Then return that (an atomic vector (our standard 1D vector) with names can be returned instead of a list).\n\n# Define the function\nsummarize_df &lt;- function(df_list, stat = \"mean\") {\n  # Get the function from the quoted string\n  my_fun &lt;- get(stat)\n  \n  # Initialize an empty list to store results\n  result_list &lt;- list()\n  \n  # Loop through each data frame in the list\n  for (df_name in names(df_list)) {\n    df &lt;- df_list[[df_name]]\n    \n    # Calculate the statistics for each numeric column\n    pre_bp_stat &lt;- my_fun(df$pre_bp, na.rm = TRUE)\n    post_bp_stat &lt;- my_fun(df$post_bp, na.rm = TRUE)\n    diff_bp_stat &lt;- my_fun(df$diff_bp, na.rm = TRUE)\n    \n    # Create a vector of names dynamically\n    stat_names &lt;- c(paste0(stat, \"_pre_bp_\", df_name),\n                    paste0(stat, \"_post_bp_\", df_name),\n                    paste0(stat, \"_diff_bp_\", df_name))\n    \n    # Create a vector of the actual statistic values\n    stat_values &lt;- c(pre_bp_stat, post_bp_stat, diff_bp_stat)\n    \n    # Assign names to the vector\n    names(stat_values) &lt;- stat_names\n    \n    # Add the named vector to the result list\n    result_list[[df_name]] &lt;- stat_values\n  }\n  \n  # Combine all results into a single named list\n  combined_result &lt;- do.call(c, result_list)\n  \n  return(combined_result)\n}\n\n• Finally, apply your function to you list of data frames from previous. Use it without specifying your statistic, with specifying your statistic as “var”, “sd”, “min”, and “max”.\n\n# Apply the function without specifying the statistic (default is \"mean\")\nsummary_mean &lt;- summarize_df(df_bp)\nsummary_mean\n\n treatment.mean_pre_bp_treatment treatment.mean_post_bp_treatment \n                          131.60                           125.95 \ntreatment.mean_diff_bp_treatment      placebo.mean_pre_bp_placebo \n                            5.65                           131.90 \n    placebo.mean_post_bp_placebo     placebo.mean_diff_bp_placebo \n                          128.90                             3.00 \n\n# Apply the function with specifying the statistic as \"var\"\nsummary_var &lt;- summarize_df(df_bp, stat = \"var\")\nprint(summary_var)\n\n treatment.var_pre_bp_treatment treatment.var_post_bp_treatment \n                       75.72632                        78.99737 \ntreatment.var_diff_bp_treatment      placebo.var_pre_bp_placebo \n                      117.81842                       149.87778 \n    placebo.var_post_bp_placebo     placebo.var_diff_bp_placebo \n                      124.98889                       341.33333 \n\n# Apply the function with specifying the statistic as \"sd\"\nsummary_sd &lt;- summarize_df(df_bp, stat = \"sd\")\nprint(summary_sd)\n\n treatment.sd_pre_bp_treatment treatment.sd_post_bp_treatment \n                      8.702087                       8.888046 \ntreatment.sd_diff_bp_treatment      placebo.sd_pre_bp_placebo \n                     10.854419                      12.242458 \n    placebo.sd_post_bp_placebo     placebo.sd_diff_bp_placebo \n                     11.179843                      18.475209 \n\n# Apply the function with specifying the statistic as \"min\"\nsummary_min &lt;- summarize_df(df_bp, stat = \"min\")\nprint(summary_min)\n\n treatment.min_pre_bp_treatment treatment.min_post_bp_treatment \n                            115                             114 \ntreatment.min_diff_bp_treatment      placebo.min_pre_bp_placebo \n                            -24                             114 \n    placebo.min_post_bp_placebo     placebo.min_diff_bp_placebo \n                            105                             -21 \n\n# Apply the function with specifying the statistic as \"max\"\nsummary_max &lt;- summarize_df(df_bp, stat = \"max\")\nprint(summary_max)\n\n treatment.max_pre_bp_treatment treatment.max_post_bp_treatment \n                            151                             146 \ntreatment.max_diff_bp_treatment      placebo.max_pre_bp_placebo \n                             21                             152 \n    placebo.max_post_bp_placebo     placebo.max_diff_bp_placebo \n                            143                              33"
  }
]